{"version":3,"sources":["./src/app/authentication/login/login.component.ts","./src/app/authentication/login/login.component.html","./src/app/authentication/auth.module.ts","./src/app/authentication/signup/signup.component.ts","./src/app/authentication/signup/signup.component.html"],"names":[],"mappings":"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","file":"authentication-auth-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n\n  constructor(private _authS: AuthService, private _router: Router) {\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, [Validators.required]),\n      password: new FormControl(null, Validators.required),\n    });\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  isValid(controlName) {\n    return this.loginForm.get(controlName).invalid && this.loginForm.get(controlName).touched;\n  }\n\n  login() {\n    if (this.loginForm.invalid) {\n      return;\n    }\n    console.log('this.loginForm.value', this.loginForm.value);\n    this._authS.loginUser(this.loginForm.value).subscribe(res => {\n      console.log(\"loginData\", res);\n      // localStorage.setItem('token', res.toString());\n      this._router.navigate(['/dashboard']);\n    })\n  }\n\n}\n","<div class=\"container\">\n  <section class=\"loginSection\">\n    <div class=\"row\">\n      <div class=\"card d-flex flex-row p-0\">\n        <div class=\"col-md-5\">\n          <div class=\"left-side\">\n            <img class=\"h-100 w-100\" src=\"../../../assets/img/BookTracker.png\" alt=\"login\" style=\"\n            object-fit: cover;\" />\n          </div>\n        </div>\n        <div class=\"col-md-7\">\n          <div class=\"p-5 right-side h-100 w-100\">\n            <form [formGroup]=\"loginForm\">\n              <h5 class=\"text-center\">Sign in</h5>\n              <div class=\"form-group\">\n                <label for=\"email\">Email</label>\n                <input type=\"email\" class=\"form-control\" name=\"email\" id=\"email\" formControlName=\"email\"\n                  placeholder=\"Email\" required />\n              </div>\n              <span *ngIf=\"isValid('email')\" class=\"error\">email is required</span>\n              <div class=\"form-group mt-2\">\n                <label for=\"password\">Password</label>\n                <input type=\"text\" class=\"form-control\" name=\"password\" id=\"password\" formControlName=\"password\"\n                  placeholder=\"Password\" required>\n              </div>\n              <span *ngIf=\"isValid('password')\" class=\"error\">password is required</span>\n            </form>\n            <button class=\"btn btn-success w-100 mt-3\" (click)=\"login()\">Sign in</button>\n            <div class=\"align-items-center d-flex mt-3\">\n              <p class=\"mb-0\">New here ?</p>\n              <a class=\"px-3\" id=\"sign-up-btn\" [routerLink]=\"['/signup']\">\n                Sign up\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nexport const autRoutes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: '',\n        redirectTo: 'login',\n        pathMatch: 'full'\n      },\n      {\n        path: 'login',\n        component: LoginComponent,\n      },\n      {\n        path: 'signup',\n        component: SignupComponent,\n      }\n    ]\n  }\n]\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    SignupComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(autRoutes),\n    FormsModule,\n    ReactiveFormsModule,\n  ]\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { AuthService, SignupData } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { JsonPipe } from '@angular/common';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  regForm: FormGroup;\n  constructor(private _authS: AuthService, private _router: Router) {\n    this.regForm = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      name: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required),\n      cnf_password: new FormControl(null, this.passwordValidator),\n    });\n\n    this.regForm.controls.password.valueChanges\n      .subscribe(\n        x => this.regForm.controls.cnf_password.updateValueAndValidity()\n      )\n  }\n\n  ngOnInit(): void {\n  }\n\n  isValid(controlName) {\n    return this.regForm.get(controlName).invalid && this.regForm.get(controlName).touched;\n  }\n  passwordValidator(control: AbstractControl) {\n    if (control && (control.value !== null || control.value !== undefined)) {\n      const cnfpassValue = control.value;\n\n      const passControl = control.root.get('password');\n      if (passControl) {\n        const passValue = passControl.value;\n        if (passValue !== cnfpassValue || passValue === '') {\n          return {\n            isError: true\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n\n  regiserUser() {\n\n    if (this.regForm.invalid) {\n      return;\n    }\n    console.log('registerData', this.regForm.value);\n    this._authS.registerUser(this.regForm.value).subscribe(res => {\n      console.log('registerData', res);\n      this._router.navigate(['/login']);\n      alert(`Account created successfully`);\n    })\n  }\n}\n","<div class=\"container\">\n  <section class=\"signupSection\">\n    <div class=\"row\">\n      <div class=\"card d-flex flex-row p-0\">\n        <div class=\"col-md-7\">\n          <div class=\"h-100 w-100 p-5 right-side \">\n            <form [formGroup]=\"regForm\">\n              <h5 class=\"text-center\">Sign up</h5>\n\n              <div class=\"form-group mt-2\">\n                <label for=\"name\">User Name</label>\n                <input type=\"text\" class=\"form-control\" name=\"name\" id=\"name\" formControlName=\"name\"\n                  placeholder=\"user name\" required />\n              </div>\n              <span *ngIf=\"isValid('name')\" class=\"error\">username is required</span>\n              <div class=\"form-group mt-2\">\n                <label for=\"email\">Email</label>\n                <input type=\"email\" class=\"form-control\" name=\"email\" id=\"email\" formControlName=\"email\"\n                  placeholder=\"Email\" required />\n              </div>\n              <span *ngIf=\"isValid('email')\" class=\"error\">email is required</span>\n              <div class=\"form-group mt-2\">\n                <label for=\"password\">Password</label>\n                <input type=\"text\" class=\"form-control\" name=\"password\" id=\"password\" formControlName=\"password\"\n                  placeholder=\"Password\" required>\n              </div>\n              <span *ngIf=\"isValid('password')\" class=\"error\">password is required</span>\n              <div class=\"form-group mt-2\">\n                <label for=\"cnf_password\">Password</label>\n                <input type=\"text\" class=\"form-control\" name=\"cnf_password\" id=\"cnf_password\"\n                  formControlName=\"cnf_password\" placeholder=\"confirm password\" required>\n              </div>\n              <span *ngIf=\"isValid('cnf_password')\" class=\"error\">password & confirm password should\n                match</span>\n            </form>\n            <button class=\"btn btn-success w-100 mt-2\" (click)=\"regiserUser()\">Sign in</button>\n            <div class=\"align-items-center d-flex mt-3\">\n              <p class=\"mb-0\">Already a user?</p>\n              <a class=\"px-3\" id=\"sign-up-btn\" [routerLink]=\"['/login']\">\n                Sign in\n              </a>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-5\">\n          <div class=\"left-side\">\n            <img class=\"h-100 w-100\" src=\"../../../assets/img/BookTracker.png\" alt=\"login\" style=\"\n              object-fit: cover;\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</div>"],"sourceRoot":"webpack:///"}