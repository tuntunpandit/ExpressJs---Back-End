{"version":3,"sources":["./src/app/models/bookTrackerError.ts","./src/app/layout/header/header.component.ts","./src/app/layout/header/header.component.html","./node_modules/rxjs/_esm2015/internal/observable/dom/ajax.js","./src/app/admin/book-tracker/add-book/add-book.component.ts","./src/app/admin/book-tracker/add-book/add-book.component.html","./src/app/admin/main/main.component.ts","./src/app/admin/main/main.component.html","./node_modules/rxjs/_esm2015/internal/observable/dom/AjaxObservable.js","./src/app/admin/book-tracker/book.service.ts","./src/app/admin/book-tracker/dashboard/dashboard.component.ts","./src/app/admin/book-tracker/dashboard/dashboard.component.html","./src/app/admin/book-tracker/edit-reader/edit-reader.component.ts","./src/app/admin/book-tracker/edit-reader/edit-reader.component.html","./src/app/admin/admin.module.ts","./src/app/layout/footer/footer.component.ts","./src/app/layout/footer/footer.component.html","./node_modules/rxjs/_esm2015/ajax/index.js","./src/app/admin/book-tracker/edit-book/edit-book.component.ts","./src/app/admin/book-tracker/edit-book/edit-book.component.html","./node_modules/rxjs/_esm2015/internal/util/root.js","./src/app/admin/book-tracker/add-reader/add-reader.component.ts","./src/app/admin/book-tracker/add-reader/add-reader.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAO,MAAM,WAAW;CAIvB;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;AAQ3C,MAAM,eAAe;IAE1B,YAAoB,MAAmB;QAAnB,WAAM,GAAN,MAAM,CAAa;IAAI,CAAC;IAE5C,QAAQ;IACR,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;IAC3B,CAAC;;8EATU,eAAe;+FAAf,eAAe;QCR5B,yEACE;QAAA,sEACA;QAAA,yEACE;QAAA,2EACE;QAAA,kEAAa;QACb,kEAAa;QACb,kEAAa;QACf,4DAAQ;QACV,4DAAM;QAEN,yEACE;QAAA,wEACE;QAAA,qEAAI;QAAA,wEAA2D;QAAA,wEAAY;QAAA,4DAAI;QAAA,4DAAK;QACpF,sEAAI;QAAA,wEAAyD;QAAA,oEAAQ;QAAA,4DAAI;QAAA,4DAAK;QAC9E,sEAAI;QAAA,wEAA2D;QAAA,sEAAU;QAAA,4DAAI;QAAA,4DAAK;QACpF,4DAAK;QAEL,yEACE;QAAA,sEAAI;QAAA,6EACmB;QAAnB,wIAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,mEAA8D;QAAA,4DAAS;QACpG,4DAAK;QACP,4DAAK;QAEP,4DAAM;QACR,4DAAM;;QAZO,2DAA6B;QAA7B,6IAA6B;QAC7B,0DAA2B;QAA3B,6IAA2B;QAC3B,0DAA6B;QAA7B,6IAA6B;;6FDN7B,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAkD;AAC3C,oBAAoB,8DAAc;AACzC,gC;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACO;;;;;AAS7D,MAAM,gBAAgB;IAG3B,iDAAiD;IACjD,YAAoB,GAAgB,EAAU,WAAwB;QAAlD,QAAG,GAAH,GAAG,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QACpE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YAC7B,KAAK,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,MAAM,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,eAAe,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC7C,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;IACR,CAAC;IAGD,UAAU;QACR,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC5C,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;YACvB,MAAM,QAAQ,GAAG;gBACf,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK;gBAChC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM;gBAClC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI;aAC1D;YACD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAClD,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAC/B,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;gBACtB,KAAK,CAAC,yBAAyB,CAAC,CAAC;YACnC,CAAC,CAAC;SACH;IACH,CAAC;;gFA9BU,gBAAgB;gGAAhB,gBAAgB;;QCV7B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,wEAAuB;QAAA,mEAAQ;QAAA,4DAAK;QACxC,4DAAM;QACN,yEACI;QAAA,0EACI;QAAA,yEACI;QAAA,4EAAuB;QAAA,qEAAS;QAAA,4DAAQ;QACxC,wEAEJ;QAAA,4DAAM;QACN,0EACI;QAAA,6EAAyB;QAAA,uEAAW;QAAA,4DAAQ;QAC5C,wEAEJ;QAAA,4DAAM;QACN,0EACI;QAAA,6EAA8B;QAAA,4EAAgB;QAAA,4DAAQ;QACtD,2EACI;QAAA,4EAEA;QAAA,2EACI;QAAA,4EAAyE;QAArB,oRAAS,YAAU,IAAC;QAAC,4DAAO;QACpF,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,8EAA0E;QAAvB,yIAAS,gBAAY,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAC7F,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QA3BoB,0DAAsB;QAAtB,mFAAsB;;6FDEnC,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAO3C,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCL1B,yEACE;QAAA,wEAAyB;QAC3B,4DAAS;QAIT,uEACE;QAAA,2EAA+B;QACjC,4DAAO;QAGP,4EACE;QAAA,yEACE;QAAA,yEACE;QAAA,uEAAM;QAAA,yFAA8B;QAAA,4DAAO;QAC7C,4DAAM;QACR,4DAAM;QACR,4DAAS;;6FDZI,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACO;AACA;AACJ;AAC1C;AACA,QAAQ,+CAAI;AACZ,mBAAmB,+CAAI;AACvB;AACA,eAAe,+CAAI;AACnB,mBAAmB,+CAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,+CAAI;AACZ,mBAAmB,+CAAI;AACvB;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA,4BAA4B,+CAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+CAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACO;AACP,+BAA+B,8BAA8B;AAC7D;AACO;AACP,+BAA+B,qCAAqC;AACpE;AACO;AACP,+BAA+B,iCAAiC;AAChE;AACO;AACP,+BAA+B,oCAAoC;AACnE;AACO;AACP,+BAA+B,sCAAsC;AACrE;AACA,oBAAoB,0DAAG;AAChB;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACO,6BAA6B,sDAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACM,6BAA6B,sDAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,+CAAI,qCAAqC,+CAAI;AACjF,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4BAA4B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oBAAoB,oDAAoD,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,+CAAI,6BAA6B,+CAAI;AACtD;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,wBAAwB,GAAG,8BAA8B;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA,oBAAoB,+CAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0CAA0C;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,0C;;;;;;;;;;;;ACtWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAIC;AACS;AACS;;;;AAMvD,MAAM,WAAW;IAEtB,YAAoB,KAAiB,EAAU,MAAc,EAAU,eAA+B;QAAlF,UAAK,GAAL,KAAK,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,oBAAe,GAAf,eAAe,CAAgB;IAAI,CAAC;IAE3G,WAAW;IACX,OAAO,CAAC,QAAuB;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC,IAAI,CACnD,iEAAU,CAAC,GAAG,CAAC,EAAE;YACf,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACnB,OAAO,0CAAK,CAAC;QACf,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IACD,gBAAgB;IAChB,kBAAkB;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAS,eAAe,CAAC;aAC3C,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,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","file":"admin-admin-module.js","sourcesContent":["export class customError {\n    errorNumber: number;\n    message: string;\n    friendlyMessage: string\n}","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/authentication/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private _authS: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  logout() {\n    this._authS.logoutUser();\n  }\n}\n\n","<div class=\"nav\">\n  <input type=\"checkbox\" id=\"nav-check\">\n  <div class=\"nav-btn\">\n    <label for=\"nav-check\">\n      <span></span>\n      <span></span>\n      <span></span>\n    </label>\n  </div>\n\n  <div class=\"nav-links d-flex justify-content-between px-3 w-100 align-items-center\">\n    <ul class=\"p-0\">\n      <li><a [routerLink]=\"['/dashboard']\" routerLinkActive=\"active\">Book Tracker</a></li>\n      <li><a [routerLink]=\"['/addbook']\" routerLinkActive=\"active\">Add Book</a></li>\n      <li><a [routerLink]=\"['/addreader']\" routerLinkActive=\"active\">Add Reader</a></li>\n    </ul>\n\n    <ul class=\"p-0\">\n      <li><button class=\"align-items-center btn btn-primary btn-sm d-flex justify-content-between px-3\"\n          (click)=\"logout()\">logout<i class=\"fas fa-sign-out-alt\" style=\"margin-left: 10px;\"></i></button>\n      </li>\n    </ul>\n\n  </div>\n</div>","import { AjaxObservable } from './AjaxObservable';\nexport const ajax = (() => AjaxObservable.create)();\n//# sourceMappingURL=ajax.js.map","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { BookService } from '../book.service';\n\n@Component({\n  selector: 'app-add-book',\n  templateUrl: './add-book.component.html',\n  styleUrls: ['./add-book.component.scss']\n})\nexport class AddBookComponent implements OnInit {\n\n  bookForm: FormGroup;\n  // @ViewChild('NgbdDatepicker') d: NgbDateStruct;\n  constructor(private _fb: FormBuilder, private bookService: BookService) {\n    this.bookForm = this._fb.group({\n      title: [null, Validators.required],\n      author: [null, Validators.required],\n      publicationYear: [null, Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n\n  submitBook() {\n    console.log('working', this.bookForm.value);\n    if (this.bookForm.valid) {\n      const bookData = {\n        title: this.bookForm.value.title,\n        author: this.bookForm.value.author,\n        publicationYear: this.bookForm.value.publicationYear.year\n      }\n      this.bookService.addBook(bookData).subscribe(data => {\n        console.log('Book Data', data);\n        this.bookForm.reset();\n        alert(`Book added successfully`);\n      })\n    }\n  }\n}\n","<div class=\"container\">\n    <div class=\"row mt-5\">\n        <div class=\"col-md-10\">\n            <div class=\"card\">\n                <div class=\"card-header bg-info d-flex align-items-center\">\n                    <h3 class=\"card-title\">Add Book</h3>\n                </div>\n                <div class=\"card-body\">\n                    <form [formGroup]=\"bookForm\">\n                        <div class=\"form-group mb-3\">\n                            <label for=\"book_name\">Book Name</label>\n                            <input type=\"text\" class=\"form-control\" id=\"book_name\" formControlName=\"title\"\n                                placeholder=\"Enter book name\">\n                        </div>\n                        <div class=\"form-group mb-3\">\n                            <label for=\"author_name\">Author Name</label>\n                            <input type=\"text\" class=\"form-control\" id=\"author_name\" formControlName=\"author\"\n                                placeholder=\"Enter author name\">\n                        </div>\n                        <div class=\"form-group mb-3\">\n                            <label for=\"publication_date\">Publication Date</label>\n                            <div class=\"input-group\">\n                                <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp\" id=\"publication_date\"\n                                    formControlName=\"publicationYear\" ngbDatepicker #d=\"ngbDatepicker\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text fa fa-calendar ml--1\" (click)=\"d.toggle()\"></span>\n                                </div>\n                            </div>\n                        </div>\n                        <button class=\"btn btn-success mb-3\" type=\"submit\" (click)=\"submitBook()\">Submit</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- header  -->\n\n<header>\n  <app-header></app-header>\n</header>\n\n<!-- main content  -->\n\n<main>\n  <router-outlet></router-outlet>\n</main>\n\n<!-- Footer -->\n<footer class=\"sticky-footer mt-4 d-none d-md-block\">\n  <div class=\"container my-auto\">\n    <div class=\"copyright text-center my-auto\">\n      <span>Copyright &copy; tuntunpandit.</span>\n    </div>\n  </div>\n</footer>","import { root } from '../../util/root';\nimport { Observable } from '../../Observable';\nimport { Subscriber } from '../../Subscriber';\nimport { map } from '../../operators/map';\nfunction getCORSRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    }\n    else if (!!root.XDomainRequest) {\n        return new root.XDomainRequest();\n    }\n    else {\n        throw new Error('CORS is not supported by your browser');\n    }\n}\nfunction getXMLHttpRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    }\n    else {\n        let progId;\n        try {\n            const progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n            for (let i = 0; i < 3; i++) {\n                try {\n                    progId = progIds[i];\n                    if (new root.ActiveXObject(progId)) {\n                        break;\n                    }\n                }\n                catch (e) {\n                }\n            }\n            return new root.ActiveXObject(progId);\n        }\n        catch (e) {\n            throw new Error('XMLHttpRequest is not supported by your browser');\n        }\n    }\n}\nexport function ajaxGet(url, headers = null) {\n    return new AjaxObservable({ method: 'GET', url, headers });\n}\nexport function ajaxPost(url, body, headers) {\n    return new AjaxObservable({ method: 'POST', url, body, headers });\n}\nexport function ajaxDelete(url, headers) {\n    return new AjaxObservable({ method: 'DELETE', url, headers });\n}\nexport function ajaxPut(url, body, headers) {\n    return new AjaxObservable({ method: 'PUT', url, body, headers });\n}\nexport function ajaxPatch(url, body, headers) {\n    return new AjaxObservable({ method: 'PATCH', url, body, headers });\n}\nconst mapResponse = map((x, index) => x.response);\nexport function ajaxGetJSON(url, headers) {\n    return mapResponse(new AjaxObservable({\n        method: 'GET',\n        url,\n        responseType: 'json',\n        headers\n    }));\n}\nexport class AjaxObservable extends Observable {\n    constructor(urlOrRequest) {\n        super();\n        const request = {\n            async: true,\n            createXHR: function () {\n                return this.crossDomain ? getCORSRequest() : getXMLHttpRequest();\n            },\n            crossDomain: true,\n            withCredentials: false,\n            headers: {},\n            method: 'GET',\n            responseType: 'json',\n            timeout: 0\n        };\n        if (typeof urlOrRequest === 'string') {\n            request.url = urlOrRequest;\n        }\n        else {\n            for (const prop in urlOrRequest) {\n                if (urlOrRequest.hasOwnProperty(prop)) {\n                    request[prop] = urlOrRequest[prop];\n                }\n            }\n        }\n        this.request = request;\n    }\n    _subscribe(subscriber) {\n        return new AjaxSubscriber(subscriber, this.request);\n    }\n}\nAjaxObservable.create = (() => {\n    const create = (urlOrRequest) => {\n        return new AjaxObservable(urlOrRequest);\n    };\n    create.get = ajaxGet;\n    create.post = ajaxPost;\n    create.delete = ajaxDelete;\n    create.put = ajaxPut;\n    create.patch = ajaxPatch;\n    create.getJSON = ajaxGetJSON;\n    return create;\n})();\nexport class AjaxSubscriber extends Subscriber {\n    constructor(destination, request) {\n        super(destination);\n        this.request = request;\n        this.done = false;\n        const headers = request.headers = request.headers || {};\n        if (!request.crossDomain && !this.getHeader(headers, 'X-Requested-With')) {\n            headers['X-Requested-With'] = 'XMLHttpRequest';\n        }\n        let contentTypeHeader = this.getHeader(headers, 'Content-Type');\n        if (!contentTypeHeader && !(root.FormData && request.body instanceof root.FormData) && typeof request.body !== 'undefined') {\n            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n        }\n        request.body = this.serializeBody(request.body, this.getHeader(request.headers, 'Content-Type'));\n        this.send();\n    }\n    next(e) {\n        this.done = true;\n        const { xhr, request, destination } = this;\n        let result;\n        try {\n            result = new AjaxResponse(e, xhr, request);\n        }\n        catch (err) {\n            return destination.error(err);\n        }\n        destination.next(result);\n    }\n    send() {\n        const { request, request: { user, method, url, async, password, headers, body } } = this;\n        try {\n            const xhr = this.xhr = request.createXHR();\n            this.setupEvents(xhr, request);\n            if (user) {\n                xhr.open(method, url, async, user, password);\n            }\n            else {\n                xhr.open(method, url, async);\n            }\n            if (async) {\n                xhr.timeout = request.timeout;\n                xhr.responseType = request.responseType;\n            }\n            if ('withCredentials' in xhr) {\n                xhr.withCredentials = !!request.withCredentials;\n            }\n            this.setHeaders(xhr, headers);\n            if (body) {\n                xhr.send(body);\n            }\n            else {\n                xhr.send();\n            }\n        }\n        catch (err) {\n            this.error(err);\n        }\n    }\n    serializeBody(body, contentType) {\n        if (!body || typeof body === 'string') {\n            return body;\n        }\n        else if (root.FormData && body instanceof root.FormData) {\n            return body;\n        }\n        if (contentType) {\n            const splitIndex = contentType.indexOf(';');\n            if (splitIndex !== -1) {\n                contentType = contentType.substring(0, splitIndex);\n            }\n        }\n        switch (contentType) {\n            case 'application/x-www-form-urlencoded':\n                return Object.keys(body).map(key => `${encodeURIComponent(key)}=${encodeURIComponent(body[key])}`).join('&');\n            case 'application/json':\n                return JSON.stringify(body);\n            default:\n                return body;\n        }\n    }\n    setHeaders(xhr, headers) {\n        for (let key in headers) {\n            if (headers.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, headers[key]);\n            }\n        }\n    }\n    getHeader(headers, headerName) {\n        for (let key in headers) {\n            if (key.toLowerCase() === headerName.toLowerCase()) {\n                return headers[key];\n            }\n        }\n        return undefined;\n    }\n    setupEvents(xhr, request) {\n        const progressSubscriber = request.progressSubscriber;\n        function xhrTimeout(e) {\n            const { subscriber, progressSubscriber, request } = xhrTimeout;\n            if (progressSubscriber) {\n                progressSubscriber.error(e);\n            }\n            let error;\n            try {\n                error = new AjaxTimeoutError(this, request);\n            }\n            catch (err) {\n                error = err;\n            }\n            subscriber.error(error);\n        }\n        xhr.ontimeout = xhrTimeout;\n        xhrTimeout.request = request;\n        xhrTimeout.subscriber = this;\n        xhrTimeout.progressSubscriber = progressSubscriber;\n        if (xhr.upload && 'withCredentials' in xhr) {\n            if (progressSubscriber) {\n                let xhrProgress;\n                xhrProgress = function (e) {\n                    const { progressSubscriber } = xhrProgress;\n                    progressSubscriber.next(e);\n                };\n                if (root.XDomainRequest) {\n                    xhr.onprogress = xhrProgress;\n                }\n                else {\n                    xhr.upload.onprogress = xhrProgress;\n                }\n                xhrProgress.progressSubscriber = progressSubscriber;\n            }\n            let xhrError;\n            xhrError = function (e) {\n                const { progressSubscriber, subscriber, request } = xhrError;\n                if (progressSubscriber) {\n                    progressSubscriber.error(e);\n                }\n                let error;\n                try {\n                    error = new AjaxError('ajax error', this, request);\n                }\n                catch (err) {\n                    error = err;\n                }\n                subscriber.error(error);\n            };\n            xhr.onerror = xhrError;\n            xhrError.request = request;\n            xhrError.subscriber = this;\n            xhrError.progressSubscriber = progressSubscriber;\n        }\n        function xhrReadyStateChange(e) {\n            return;\n        }\n        xhr.onreadystatechange = xhrReadyStateChange;\n        xhrReadyStateChange.subscriber = this;\n        xhrReadyStateChange.progressSubscriber = progressSubscriber;\n        xhrReadyStateChange.request = request;\n        function xhrLoad(e) {\n            const { subscriber, progressSubscriber, request } = xhrLoad;\n            if (this.readyState === 4) {\n                let status = this.status === 1223 ? 204 : this.status;\n                let response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);\n                if (status === 0) {\n                    status = response ? 200 : 0;\n                }\n                if (status < 400) {\n                    if (progressSubscriber) {\n                        progressSubscriber.complete();\n                    }\n                    subscriber.next(e);\n                    subscriber.complete();\n                }\n                else {\n                    if (progressSubscriber) {\n                        progressSubscriber.error(e);\n                    }\n                    let error;\n                    try {\n                        error = new AjaxError('ajax error ' + status, this, request);\n                    }\n                    catch (err) {\n                        error = err;\n                    }\n                    subscriber.error(error);\n                }\n            }\n        }\n        xhr.onload = xhrLoad;\n        xhrLoad.subscriber = this;\n        xhrLoad.progressSubscriber = progressSubscriber;\n        xhrLoad.request = request;\n    }\n    unsubscribe() {\n        const { done, xhr } = this;\n        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n            xhr.abort();\n        }\n        super.unsubscribe();\n    }\n}\nexport class AjaxResponse {\n    constructor(originalEvent, xhr, request) {\n        this.originalEvent = originalEvent;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n    }\n}\nconst AjaxErrorImpl = (() => {\n    function AjaxErrorImpl(message, xhr, request) {\n        Error.call(this);\n        this.message = message;\n        this.name = 'AjaxError';\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n        return this;\n    }\n    AjaxErrorImpl.prototype = Object.create(Error.prototype);\n    return AjaxErrorImpl;\n})();\nexport const AjaxError = AjaxErrorImpl;\nfunction parseJson(xhr) {\n    if ('response' in xhr) {\n        return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n    }\n    else {\n        return JSON.parse(xhr.responseText || 'null');\n    }\n}\nfunction parseXhrResponse(responseType, xhr) {\n    switch (responseType) {\n        case 'json':\n            return parseJson(xhr);\n        case 'xml':\n            return xhr.responseXML;\n        case 'text':\n        default:\n            return ('response' in xhr) ? xhr.response : xhr.responseText;\n    }\n}\nfunction AjaxTimeoutErrorImpl(xhr, request) {\n    AjaxError.call(this, 'ajax timeout', xhr, request);\n    this.name = 'AjaxTimeoutError';\n    return this;\n}\nexport const AjaxTimeoutError = AjaxTimeoutErrorImpl;\n//# sourceMappingURL=AjaxObservable.js.map","import { Injectable } from '@angular/core';\nimport { Book } from 'src/app/models/book';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { EMPTY, Observable, throwError } from 'rxjs';\nimport { customError } from 'src/app/models/bookTrackerError';\nimport { Reader } from 'src/app/models/reader';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n\n  constructor(private _http: HttpClient, private _route: Router, private _activatedRoute: ActivatedRoute) { }\n\n  // add book\n  addBook(bookData: Partial<Book>) {\n    return this._http.post('/api/addBook', bookData).pipe(\n      catchError(err => {\n        alert(err.message);\n        return EMPTY;\n      }));\n  }\n  // get all books\n  getAllBooksFromAPi(): Observable<Book[] | customError> {\n    return this._http.get<Book[]>('/api/getBooks')\n      .pipe(\n        catchError(this.handleError)\n      )\n  }\n  //get book by id\n  // getBookDataById(bookId: string): Observable<Book | customError> {\n  //   return this._http.get<Book>('api/getReaderById', bookId)\n  //     .pipe(\n  //       catchError(err => {\n  //         alert(err.message);\n  //         return EMPTY;\n  //       })\n  //     )\n  // }\n  // add reader\n  addReader(readerData: Partial<Reader>) {\n    return this._http.post('/api/addReader', readerData).pipe(\n      catchError(err => {\n        alert(err.message);\n        return EMPTY;\n      }));\n  }\n  // get all readers\n  getAllReadersFromApi(): Observable<Reader[] | customError> {\n    return this._http.get<Reader[]>('/api/getReaders')\n      .pipe(\n        catchError(this.handleError)\n      )\n  }\n  // get reader by id\n  // getReaderDataById(readerId: string): Observable<Reader | customError> {\n  //   return this._http.get<Reader>('api/updateReader', readerId)\n  //     .pipe(\n  //       catchError(err => {\n  //         alert(err.message);\n  //         return EMPTY;\n  //       })\n  //     )\n  // }\n  //handle http errors\n  private handleError(error: HttpErrorResponse): Observable<customError> {\n    let dataError = new customError();\n    dataError.errorNumber = 100;\n    dataError.message = error.statusText;\n    dataError.friendlyMessage = \"An error occured retrieving data.\";\n    return throwError(dataError);\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Book } from '../../../models/book';\nimport { Reader } from '../../../models/reader';\nimport { BookService } from '../book.service';\nimport { Router } from '@angular/router';\nimport { customError } from 'src/app/models/bookTrackerError';\nimport { ajax } from 'rxjs/ajax';\nimport { map, filter, concatMap, switchMap, reduce } from 'rxjs/operators';\nimport { from, fromEvent } from 'rxjs';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  allBooks: Book[];\n  allReaders: Reader[];\n  mostPopularBook: Book = {\n    _id: '',\n    title: '',\n    author: '',\n    publicationYear: null\n  };\n\n  constructor(private _bookService: BookService, private _router: Router) { }\n\n  ngOnInit() {\n    this.rxjsFunctions();\n    this.getAllData();\n  }\n\n  rxjsFunctions() {\n    /** ---------------------------------------------------\n     ajax operator will make an ajax request for the given URL.\n    --------------------------------------------------- **/\n    const data = ajax('https://jsonplaceholder.typicode.com/users')\n      .pipe(\n        map(items => items.response),\n        // filter(item => item.id > 2)\n        // reduce((sum, id) => sum + id, 0)\n      );\n    data.subscribe(d => {\n      console.log('Ajax Data', d);\n    })\n\n    /** ---------------------------------------------------\n    This operator will create an observable from an array, an array-like object, a promise, an iterable object, or an observable-like object.\n    ------------------------------------------------------  **/\n    let arr = [1, 2, 3, 4, 5];\n    from(arr).subscribe(data => {\n      console.log('From Observable:', data);\n    })\n\n\n    const ele = document.getElementById('rxjs');\n    console.log('ele', ele);\n    let hovEvent = fromEvent(ele, 'click');\n    hovEvent.subscribe(data => { \n      console.log('hover data', data);\n    })\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  getAllData() {\n    this.getAllBooks();\n    this.getAllReaders();\n  }\n\n  getAllBooks() {\n    this._bookService.getAllBooksFromAPi()\n      .subscribe(\n        (data: Book[]) => {\n          this.allBooks = data['books'];\n          this.mostPopularBook = this.allBooks[0];\n          console.log('bookdata', data);\n        },\n        (err: customError) => {\n          console.log(err.friendlyMessage);\n        }\n      );\n  }\n\n  getAllReaders() {\n    this._bookService.getAllReadersFromApi()\n      .subscribe(\n        (data: Reader[]) => {\n          this.allReaders = data['readers'];\n          console.log('allReaders', data);\n        },\n        (err: customError) => {\n          console.log(err.friendlyMessage);\n        }\n      );\n  }\n  editBook(bookId: number) {\n    this._router.navigate(['editbook', bookId]);\n  }\n\n  deleteBook(bookId: number) {\n\n  }\n\n  editReader(readerId: number) {\n    this._router.navigate(['editreader', readerId]);\n  }\n\n  deleteReader(readerId: number) {\n\n  }\n}\n","<div class=\"container\">\n  <div class=\"row mt-5\">\n    <div class=\"col-md-10\">\n      <div class=\"card\">\n        <div class=\"card-header bg-info\">\n          <h3 class=\"card-title\">All Books</h3>\n        </div>\n        <div class=\"card-body p-0\">\n          <div class=\"table-responsive\">\n            <table class=\"table table-hover mb-0\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Book Id</th>\n                  <th scope=\"col\">Book Name</th>\n                  <th scope=\"col\">Author</th>\n                  <th scope=\"col\">Publication Date</th>\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let book of allBooks; let i = index\">\n                  <th scope=\"row\">{{i+1}}</th>\n                  <td>{{book.title}}</td>\n                  <td>{{book.author}}</td>\n                  <td>{{book.publicationYear}}</td>\n                  <td>\n                    <div class=\"btn-group\">\n                      <button type=\"button\" class=\"btn btn-primary\" (click)=\"editBook(book._id)\">Edit</button>\n                      <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteBook(book._id)\">Delete</button>\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"row mt-5\">\n    <div class=\"col-md-10\">\n      <div class=\"card\">\n        <div class=\"card-header bg-info\">\n          <h3 class=\"card-title\">All Readers</h3>\n        </div>\n        <div class=\"card-body p-0\">\n          <div class=\"table-responsive\">\n            <table class=\"table table-hover mb-0\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Reader Id</th>\n                  <th scope=\"col\">Reader Name</th>\n                  <th scope=\"col\">Total Mins. Read</th>\n                  <th scope=\"col\">Weekly Reading Goal</th>\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let reader of allReaders; let R_I = index\">\n                  <th scope=\"row\">{{R_I + 1}}</th>\n                  <td>{{reader.name}}</td>\n                  <td>{{reader.totalMinutesRead}}</td>\n                  <td>{{reader.weeklyReadingGoal}}</td>\n                  <td>\n                    <div class=\"btn-group\">\n                      <button type=\"button\" class=\"btn btn-primary\" id=\"rxjs\"\n                        (click)=\"editReader(reader._id)\">Edit</button>\n                      <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteReader(reader._id)\">Delete</button>\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"row my-5\">\n    <div class=\"col-md-10\">\n      <div class=\"card\">\n        <div class=\"card-header bg-info\">\n          <h3 class=\"card-title\">Most Popular Book</h3>\n        </div>\n        <div class=\"card-body\">\n          {{mostPopularBook.title}} => <i class=\"text-muted\">{{mostPopularBook.author}}</i>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { BookService } from '../book.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Reader } from 'src/app/models/reader';\n\n@Component({\n  selector: 'app-edit-reader',\n  templateUrl: './edit-reader.component.html',\n  styleUrls: ['./edit-reader.component.scss']\n})\nexport class EditReaderComponent implements OnInit {\n  readerId: string;\n  readerForm: FormGroup;\n  constructor(private _fb: FormBuilder, private bookService: BookService, private activatedRoute: ActivatedRoute) {\n    this.readerForm = this._fb.group({\n      name: [null, Validators.required],\n      weeklyReadingGoal: [null, Validators.required],\n      totalMinutesRead: [null, Validators.required],\n    });\n  }\n\n\n  ngOnInit(): void {\n    this.activatedRoute.paramMap.subscribe(params => {\n      console.log('Reader id', params.get('id'));\n      this.readerId = params.get('id');\n    });\n\n    // this.bookService.getReaderDataById(this.readerId)\n    //   .subscribe(\n    //     (res: Reader) => {\n    //       console.log(\"Reader by id\", res);\n    //     }\n    //   )\n  }\n\n  updateReader() {\n    console.log('working update Reader', this.readerForm.value);\n    // if (this.readerForm.valid) {\n    //   this.bookService.updateReader(this.readerForm.value).subscribe(data => {\n    //     console.log('reader Data', data);\n    //     this.readerForm.reset();\n    //     alert(`reader added successfully`);\n    //   })\n    // }\n  }\n}\n","<div class=\"container\">\n    <div class=\"row mt-5\">\n        <div class=\"col-md-10\">\n            <div class=\"card\">\n                <div class=\"card-header bg-info d-flex align-items-center\">\n                    <h3 class=\"card-title\">Add Reader</h3>\n                </div>\n                <div class=\"card-body\">\n                    <form [formGroup]=\"readerForm\">\n                        <div class=\"form-group mb-3\">\n                            <label for=\"readerName\">Reader Name</label>\n                            <input type=\"text\" class=\"form-control\" id=\"readerName\" formControlName=\"name\"\n                                placeholder=\"Enter reader name\">\n                        </div>\n                        <div class=\"form-group mb-3\">\n                            <label for=\"weeklyGoal\">Weekly Reading Goal</label>\n                            <input type=\"text\" class=\"form-control\" id=\"weeklyGoal\" formControlName=\"weeklyReadingGoal\"\n                                placeholder=\"Enter reading goal\">\n                        </div>\n                        <div class=\"form-group mb-3\">\n                            <label for=\"totalMins\">Total Mins. Read</label>\n                            <input type=\"text\" class=\"form-control\" id=\"totalMins\" formControlName=\"totalMinutesRead\"\n                                placeholder=\"Enter reading time\">\n                        </div>\n                        <button class=\"btn btn-success mb-3\" type=\"submit\" (click)=\"updateReader()\">Update</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { DashboardComponent } from './book-tracker/dashboard/dashboard.component';\nimport { AddBookComponent } from './book-tracker/add-book/add-book.component';\nimport { AddReaderComponent } from './book-tracker/add-reader/add-reader.component';\nimport { EditBookComponent } from './book-tracker/edit-book/edit-book.component';\nimport { EditReaderComponent } from './book-tracker/edit-reader/edit-reader.component';\nimport { MainComponent } from './main/main.component';\nimport { FooterComponent } from '../layout/footer/footer.component';\nimport { HeaderComponent } from '../layout/header/header.component';\n\nexport const adminRoutes: Routes = [\n  {\n    path: '',\n    component: MainComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'dashboard',\n        pathMatch: 'full',\n      },\n      {\n        path: 'dashboard',\n        component: DashboardComponent\n      },\n      {\n        path: 'addbook',\n        component: AddBookComponent\n      },\n      {\n        path: 'addreader',\n        component: AddReaderComponent\n      },\n      {\n        path: 'editbook/:id',\n        component: EditBookComponent\n      },\n      {\n        path: 'editreader/:id',\n        component: EditReaderComponent\n      },\n    ]\n  },\n]\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    AddBookComponent,\n    AddReaderComponent,\n    EditBookComponent,\n    EditReaderComponent,\n    MainComponent,\n    FooterComponent,\n    HeaderComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(adminRoutes),\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class AdminModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>footer works!</p>\n","export { ajax } from '../internal/observable/dom/ajax';\nexport { AjaxResponse, AjaxError, AjaxTimeoutError } from '../internal/observable/dom/AjaxObservable';\n//# sourceMappingURL=index.js.map","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { BookService } from '../book.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Book } from 'src/app/models/book';\n\n@Component({\n  selector: 'app-edit-book',\n  templateUrl: './edit-book.component.html',\n  styleUrls: ['./edit-book.component.scss']\n})\nexport class EditBookComponent implements OnInit {\n  bookForm: FormGroup;\n  bookId: string;\n  constructor(private _fb: FormBuilder, private bookService: BookService, private activatedRoute: ActivatedRoute) {\n    this.bookForm = this._fb.group({\n      title: [null, Validators.required],\n      author: [null, Validators.required],\n      publicationYear: [null, Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.paramMap.subscribe(params => {\n      console.log(params.get('id'));\n      this.bookId = params.get('id');\n    });\n\n    // this.bookService.getBookDataById(this.bookId)\n    //   .subscribe((bookData: Book) => {\n    //     console.log('Book Data', bookData);\n    //   })\n  }\n\n  updateBook() {\n    // console.log('working update book', this.bookForm.value);\n    // if (this.bookForm.valid) {\n    //   const bookData = {\n    //     title: this.bookForm.value.title,\n    //     author: this.bookForm.value.author,\n    //     publicationYear: this.bookForm.value.publicationYear.year\n    //   }\n    //   this.bookService.addBook(bookData).subscribe(data => {\n    //     console.log('Book Data', data);\n    //     this.bookForm.reset();\n    //     alert(`Book added successfully`);\n    //   })\n    // }\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row mt-5\">\n        <div class=\"col-md-10\">\n            <div class=\"card\">\n                <div class=\"card-header bg-info d-flex align-items-center\">\n                    <h3 class=\"card-title\">Edit Book</h3>\n                </div>\n                <div class=\"card-body\">\n                    <form [formGroup]=\"bookForm\">\n                        <div class=\"form-group mb-3\">\n                            <label for=\"book_name\">Book Name</label>\n                            <input type=\"text\" class=\"form-control\" id=\"book_name\" formControlName=\"title\"\n                                placeholder=\"Enter book name\">\n                        </div>\n                        <div class=\"form-group mb-3\">\n                            <label for=\"author_name\">Author Name</label>\n                            <input type=\"text\" class=\"form-control\" id=\"author_name\" formControlName=\"author\"\n                                placeholder=\"Enter author name\">\n                        </div>\n                        <div class=\"form-group mb-3\">\n                            <label for=\"publication_date\">Publication Date</label>\n                            <div class=\"input-group\">\n                                <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp\" id=\"publication_date\"\n                                    formControlName=\"publicationYear\" ngbDatepicker #d=\"ngbDatepicker\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text fa fa-calendar ml--1\" (click)=\"d.toggle()\"></span>\n                                </div>\n                            </div>\n                        </div>\n                        <button class=\"btn btn-success mb-3\" type=\"submit\" (click)=\"updateBook()\">Update</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","const __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\nconst _root = __window || __global || __self;\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\nexport { _root as root };\n//# sourceMappingURL=root.js.map","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { BookService } from '../book.service';\n\n@Component({\n  selector: 'app-add-reader',\n  templateUrl: './add-reader.component.html',\n  styleUrls: ['./add-reader.component.scss']\n})\nexport class AddReaderComponent implements OnInit {\n  readerForm: FormGroup;\n  constructor(private _fb: FormBuilder, private bookService: BookService) {\n    this.readerForm = this._fb.group({\n      name: [null, Validators.required],\n      weeklyReadingGoal: [null, Validators.required],\n      totalMinutesRead: [null, Validators.required],\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n\n  submitReader() {\n    console.log('working', this.readerForm.value);\n    if (this.readerForm.valid) {\n      this.bookService.addReader(this.readerForm.value).subscribe(data => {\n        console.log('reader Data', data);\n        this.readerForm.reset();\n        alert(`reader added successfully`);\n      })\n    }\n  }\n}\n","<div class=\"container\">\n    <div class=\"row mt-5\">\n        <div class=\"col-md-10\">\n            <div class=\"card\">\n                <div class=\"card-header bg-info d-flex align-items-center\">\n                    <h3 class=\"card-title\">Add Reader</h3>\n                </div>\n                <div class=\"card-body\">\n                    <form [formGroup]=\"readerForm\">\n                        <div class=\"form-group mb-3\">\n                            <label for=\"readerName\">Reader Name</label>\n                            <input type=\"text\" class=\"form-control\" id=\"readerName\" formControlName=\"name\"\n                                placeholder=\"Enter reader name\">\n                        </div>\n                        <div class=\"form-group mb-3\">\n                            <label for=\"weeklyGoal\">Weekly Reading Goal</label>\n                            <input type=\"text\" class=\"form-control\" id=\"weeklyGoal\" formControlName=\"weeklyReadingGoal\"\n                                placeholder=\"Enter reading goal\">\n                        </div>\n                        <div class=\"form-group mb-3\">\n                            <label for=\"totalMins\">Total Mins. Read</label>\n                            <input type=\"text\" class=\"form-control\" id=\"totalMins\" formControlName=\"totalMinutesRead\"\n                                placeholder=\"Enter reading time\">\n                        </div>\n                        <button class=\"btn btn-success mb-3\" type=\"submit\" (click)=\"submitReader()\">Submit</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"],"sourceRoot":"webpack:///"}